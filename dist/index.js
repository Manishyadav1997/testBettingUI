import p from"express";import u from"path";import{fileURLToPath as E}from"url";import{createServer as v}from"http";import{WebSocketServer as x,WebSocket as g}from"ws";async function h(a){let i=v(a);return new x({server:i,path:"/ws"}).on("connection",r=>{console.log("Client connected to WebSocket"),r.send(JSON.stringify({type:"welcome",message:"Connected to BetPro real-time updates"}));let o=[setInterval(()=>{r.readyState===g.OPEN&&r.send(JSON.stringify({type:"cricket_odds_update",data:{matchId:"1",odds:{team1Win:1.85+(Math.random()-.5)*.1,team2Win:2.1+(Math.random()-.5)*.1}}}))},3e3),setInterval(()=>{if(r.readyState===g.OPEN){let t=1+Math.random()*10;r.send(JSON.stringify({type:"aviator_update",data:{multiplier:t.toFixed(2),crashed:t>8}}))}},100),setInterval(()=>{if(r.readyState===g.OPEN){let t=Math.floor(Math.random()*60);r.send(JSON.stringify({type:"color_game_update",data:{countdown:t,round:1235+Math.floor(Date.now()/6e4)}}))}},1e3)];r.on("message",t=>{try{let e=JSON.parse(t.toString());switch(console.log("Received message:",e),e.type){case"place_bet":r.send(JSON.stringify({type:"bet_placed",data:{betId:Date.now().toString(),status:"success",message:"Bet placed successfully"}}));break;case"cash_out":r.send(JSON.stringify({type:"cash_out_success",data:{amount:e.amount,multiplier:e.multiplier}}));break}}catch(e){console.error("Error parsing WebSocket message:",e)}}),r.on("close",()=>{console.log("Client disconnected from WebSocket"),o.forEach(t=>clearInterval(t))}),r.on("error",t=>{console.error("WebSocket error:",t),o.forEach(e=>clearInterval(e))})}),a.get("/api/matches",async(r,o)=>{let t=[{id:"1",team1:"Mumbai Indians",team2:"Chennai Super Kings",status:"live",score:{team1Score:"178/4",team2Score:"0/0",overs:"18.4"},odds:{team1Win:1.85,team2Win:2.1},startTime:new Date().toISOString()},{id:"2",team1:"Royal Challengers Bangalore",team2:"Delhi Capitals",status:"live",score:{team1Score:"98/2",team2Score:"0/0",overs:"12.2"},odds:{team1Win:1.92,team2Win:1.98},startTime:new Date().toISOString()}];o.json(t)}),a.post("/api/bets",async(r,o)=>{try{let{gameType:t,betType:e,amount:n,odds:c}=r.body,l={id:Date.now().toString(),gameType:t,betType:e,amount:n,odds:c,status:"pending",createdAt:new Date().toISOString()};o.json({success:!0,bet:l})}catch{o.status(400).json({error:"Failed to place bet"})}}),a.get("/api/user/balance",async(r,o)=>{o.json({balance:12450})}),a.post("/api/user/deposit",async(r,o)=>{try{let{amount:t}=r.body;o.json({success:!0,newBalance:12450+t,transactionId:Date.now().toString()})}catch{o.status(400).json({error:"Deposit failed"})}}),a.get("/api/leaderboard",async(r,o)=>{let t=[{rank:1,username:"RajeshK***",game:"Aviator",amount:45670},{rank:2,username:"PriyaM***",game:"Color Trading",amount:23450},{rank:3,username:"ArunS***",game:"Cricket",amount:18230},{rank:4,username:"SnehaR***",game:"Mini Games",amount:15670},{rank:5,username:"VikasT***",game:"Aviator",amount:12890}];o.json(t)}),i}import O from"express";import b from"fs";import f from"path";import{createServer as W,createLogger as w}from"vite";import{nanoid as k}from"nanoid";var S=w();async function y(a,i){let s=await W({configFile:f.resolve(import.meta.dirname,"../vite.config.ts"),server:{middlewareMode:!0,hmr:{server:i,port:24678,clientPort:24678,protocol:"ws",host:"localhost"}},appType:"custom",customLogger:{...S,error:(r,o)=>{S.error(r,o),process.exit(1)}}});a.use(s.middlewares),a.use("*",async(r,o,t)=>{let e=r.originalUrl;try{let n=f.resolve(import.meta.dirname,"..","client","index.html"),c=await b.promises.readFile(n,"utf-8");c=c.replace('src="/src/main.tsx"',`src="/src/main.tsx?v=${k()}"`);let l=await s.transformIndexHtml(e,c);o.status(200).set({"Content-Type":"text/html"}).end(l)}catch(n){s.ssrFixStacktrace(n),t(n)}})}import j from"fs/promises";var $=E(import.meta.url),K=u.dirname($);function d(a,i="express"){let s=new Date().toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",second:"2-digit",hour12:!0});console.log(`${s} [${i}] ${a}`)}var m=p();m.use(p.json());m.use(p.urlencoded({extended:!1}));m.use((a,i,s)=>{let r=Date.now(),o=a.path,t,e=i.json;i.json=function(n,...c){return t=n,e.apply(i,[n,...c])},i.on("finish",()=>{let n=Date.now()-r;if(o.startsWith("/api")){let c=`${a.method} ${o} ${i.statusCode} in ${n}ms`;t&&(c+=` :: ${JSON.stringify(t)}`),c.length>80&&(c=c.slice(0,79)+"\u2026"),d(c)}}),s()});(async()=>{let a=await h(m);if(m.use((s,r,o,t)=>{let e=s.status||s.statusCode||500,n=s.message||"Internal Server Error";throw o.status(e).json({message:n}),s}),m.get("env")==="development")await y(m,a);else{let s=u.resolve(process.cwd(),"dist"),r="/testBettingUI";d(`Serving static files from: ${s}`);try{let o=await j.readdir(s);d(`Files in dist directory: ${o.join(", ")}`);let t=p.Router();t.use(p.static(s,{index:!1,maxAge:"1y",etag:!0,lastModified:!0,setHeaders:(e,n)=>{n.endsWith(".html")&&(e.setHeader("Cache-Control","no-cache, no-store, must-revalidate"),e.setHeader("Pragma","no-cache"),e.setHeader("Expires","0"))}})),t.get("*",(e,n,c)=>{if(e.path.startsWith("/api")||e.path.startsWith("/assets/")||e.path.endsWith(".js")||e.path.endsWith(".css")||e.path.endsWith(".json")||e.path.endsWith(".ico")||e.path.endsWith(".png")||e.path.endsWith(".jpg")||e.path.endsWith(".jpeg")||e.path.endsWith(".svg")||e.path.endsWith(".webp"))return c();d(`Serving index.html for route: ${e.path}`),n.sendFile(u.join(s,"index.html"),l=>{l&&(d(`Error serving index.html: ${l.message}`,"error"),n.status(500).send("Error loading the application"))})}),m.use(r,t),process.env.NODE_ENV!=="production"&&(m.use(p.static(s)),m.get("*",(e,n)=>{n.sendFile(u.join(s,"index.html"))}))}catch(o){let t=o instanceof Error?o.message:"Unknown error";d(`Error setting up static file serving: ${t}`,"error"),process.exit(1)}}let i=3e3;a.listen(i,"127.0.0.1",()=>{d(`Server running at http://127.0.0.1:${i}`)})})();
//# sourceMappingURL=index.js.map
